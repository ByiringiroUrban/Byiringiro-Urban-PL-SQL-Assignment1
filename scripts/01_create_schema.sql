-- Students
CREATE TABLE students (
  student_id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  first_name   VARCHAR2(100) NOT NULL,
  last_name    VARCHAR2(100) NOT NULL,
  email        VARCHAR2(255) UNIQUE NOT NULL,
  phone        VARCHAR2(20),
  join_date    DATE DEFAULT SYSDATE,
  status       VARCHAR2(20) DEFAULT 'active'
);

-- Courses
CREATE TABLE courses (
  course_id   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  course_code VARCHAR2(20) UNIQUE NOT NULL,
  title       VARCHAR2(200) NOT NULL,
  price       NUMBER(10,2) DEFAULT 0,
  capacity    NUMBER(5) DEFAULT 100
);

-- Enrollments
CREATE TABLE enrollments (
  enrollment_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  student_id    NUMBER NOT NULL,
  course_id     NUMBER NOT NULL,
  enroll_date   DATE DEFAULT SYSDATE,
  status        VARCHAR2(20) DEFAULT 'enrolled',
  CONSTRAINT fk_enroll_student FOREIGN KEY (student_id) REFERENCES students(student_id),
  CONSTRAINT fk_enroll_course  FOREIGN KEY (course_id)  REFERENCES courses(course_id),
  CONSTRAINT uq_student_course UNIQUE (student_id, course_id)
);

-- Payments
CREATE TABLE payments (
  payment_id    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  enrollment_id NUMBER NOT NULL,
  payment_date  DATE DEFAULT SYSDATE,
  amount        NUMBER(10,2) NOT NULL CHECK (amount >= 0),
  method        VARCHAR2(20),
  CONSTRAINT fk_pay_enroll FOREIGN KEY (enrollment_id) REFERENCES enrollments(enrollment_id)
);

-- Attendance
CREATE TABLE attendance (
  attendance_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  enrollment_id NUMBER NOT NULL,
  attend_date   DATE NOT NULL,
  status        VARCHAR2(10) CHECK (status IN ('present','absent','late')),
  CONSTRAINT fk_attend_enroll FOREIGN KEY (enrollment_id) REFERENCES enrollments(enrollment_id)
);
